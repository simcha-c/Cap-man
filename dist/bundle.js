/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/game.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/board.js":
/*!**********************!*\
  !*** ./lib/board.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile */ \"./lib/tile.js\");\n\n\nclass Board {\n\n  constructor() {\n    let canvas = document.getElementById('maze-canvas');\n    canvas.height = 715;\n    canvas.width = 600;\n    this.tile = new _tile__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n    let c = canvas.getContext(\"2d\");\n    c.fillStyle = \"black\";\n    c.fillRect (0, 0, 600, 715);\n    this.ctx = c;\n  }\n\n  drawBoard() {\n    let grid = [];\n    for (let col = 0; col < 28; col++) {\n      for (let row = 0; row < 31; row++) {\n        let info = this.tile.grid[row][col];\n        let color;\n        if (info === 0) {color = 'blue';}\n        if (('12346'.includes(info)) ) {color = 'black';}\n        this.ctx.beginPath();\n        this.ctx.fillStyle = color;\n        this.ctx.rect(((col * 20)+20), ((row * 21)+24.5), (20), (21.5));\n        this.ctx.fill();\n\n        if (info === 1) {\n          this.ctx.beginPath();\n          this.ctx.fillStyle = 'white';\n          this.ctx.arc( ((col * 20)+30), ((row * 21)+35), 2, 0, 2*Math.PI, false);\n          this.ctx.fill();\n        }\n\n        if (info === 2) {\n          this.ctx.beginPath();\n          this.ctx.fillStyle = 'white';\n          this.ctx.arc( ((col * 20)+30), ((row * 21)+34), 7, 0, 2*Math.PI, false);\n          this.ctx.fill();\n        }\n        if (info === 5) {\n          this.ctx.beginPath();\n          this.ctx.fillStyle = 'white';\n          this.ctx.rect(((col * 20)+20), ((row * 21)+30), (20), (3));\n          this.ctx.fill();\n        }\n      }\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);\n\n\n//# sourceURL=webpack:///./lib/board.js?");

/***/ }),

/***/ "./lib/game.js":
/*!*********************!*\
  !*** ./lib/game.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ghost__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ghost */ \"./lib/ghost.js\");\n/* harmony import */ var _pacman__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pacman */ \"./lib/pacman.js\");\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./board */ \"./lib/board.js\");\n/* harmony import */ var _sound__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sound */ \"./lib/sound.js\");\nlet started = false;\n\n\n\n\n\n\nclass Game {\n  constructor(sprite) {\n    let canvas = document.getElementById('maze-canvas');\n    let c = canvas.getContext(\"2d\");\n    this.board = new _board__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    window.tile = this.board.tile;\n    this.pacman = new _pacman__WEBPACK_IMPORTED_MODULE_1__[\"default\"](c, 300, 507.5, this.board.tile);\n    this.ghosts = [];\n    window.ghosts = this.ghosts;\n    this.ctx = c;\n    this.lives = 3;\n    this.gameOver = false;\n    this.level = 1;\n    this.firstAnimation = true;\n    this.sprite = sprite;\n    this.death = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"assets/sounds/pacman_death.wav\");\n    this.eatGhost = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"assets/sounds/pacman_eat_ghost.wav\");\n    this.beginning = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"assets/sounds/pacman_beginning.wav\");\n    this.chomp = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"assets/sounds/pacman_chomp.wav\");\n\n    this.count = 0;\n\n    this.createGhosts();\n    this.animate = this.animate.bind(this);\n  }\n\n  createGhosts() {\n    let colors = ['red', 'pink', 'blue', 'orange'];\n    let posArr = [[1, 26], [26, 1], [1, 1], [26, 26]];\n    for (var i = 0; i < 4; i++) {\n      let pos = posArr[i];\n      let newGhost = new _ghost__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, pos[0], pos[1], colors[i], this.level, this.board.tile, this.sprite, i);\n      this.ghosts.push(newGhost);\n    }\n  }\n\n  checkPacCollision() {\n    let pacPos = this.pacman.getPos();\n    this.ghosts.forEach(ghost => {\n      let gPos = ghost.getPos();\n      if (gPos[0] === pacPos[0] && gPos[1] === pacPos[1] ) {\n        if (ghost.eatable) {\n          this.eatGhost.play();\n          ghost.x = (13 * 20) + 20;\n          ghost.y = (14 * 21) + 24.5;\n          ghost.dir = [0, -1];\n          this.pacman.score += 150;\n        } else {\n          this.lives -= 1;\n          this.pacman.goToStartingPos();\n          this.ghosts.forEach(ghost => { ghost.takeAwayLife(); });\n          if (this.lives === 0) { this.gameOver = true; }\n        }\n      }\n    });\n  }\n\n  checkPacPower() {\n    if (this.pacman.power > 0 && this.pacman.power < 220) {\n      this.ghosts.forEach(ghost => { ghost.eatable = true; });\n    } else if (this.pacman.power === 220){\n      this.ghosts.forEach(ghost => { ghost.eatable = false; });\n    }\n  }\n\n  nextLevel() {\n    if (this.pacman.levelWon) {\n      this.pacman.levelWon = false;\n      this.pacman.dots = 242;\n      this.level += 1;\n      this.board = new _board__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n      this.pacman.tile = this.board.tile;\n      this.pacman.goToStartingPos();\n      this.ghosts = [];\n      this.createGhosts();\n    }\n  }\n\n  drawLife(num) {\n    this.ctx.beginPath();\n    this.ctx.arc(320 + (28 * num), 695, 12, 0.2 * Math.PI, 1.8 * Math.PI);\n    this.ctx.lineTo(320 + (28 * num), 695);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#FF0\";\n    this.ctx.fill();\n  }\n\n  gameOverScreen() {\n    this.ctx.fillStyle = \"rgba(0, 0, 0, 0.95)\";\n    this.ctx.fillRect (0, 0, 600, 715);\n\n    this.ctx.font = \"60px PacFontCrack\";\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.fillText('GAMEOVER', 105, 275);\n\n    this.ctx.font = \"30px OrbitronRegular\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(`SCORE: ${this.pacman.score}`, 200, 375);\n\n    this.ctx.font = \"18px OrbitronRegular\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText('Press Enter to start over', 180, 630);\n    started = false;\n  }\n\n  animate() {\n    this.nextLevel();\n    this.ctx.clearRect(0, 0,  this.ctx.canvas.width, this.ctx.canvas.height);\n    this.board.drawBoard();\n    this.pacman.draw();\n    this.ghosts.forEach(ghost => {\n      ghost.draw();\n    });\n    this.ctx.font = \"18px OrbitronRegular\";\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.fillText(`LIVES:`, 230, 702);\n    for (let i = 0; i < this.lives; i++) {\n      this.drawLife(i);\n    }\n    this.ctx.fillText(`LEVEL:  ${this.level}`, 475, 702);\n    this.checkPacCollision();\n    this.checkPacPower();\n    if (!this.gameOver) {\n      if (this.firstAnimation) {\n        this.firstAnimation = false;\n        this.beginning.play();\n        setTimeout(() => requestAnimationFrame(this.animate), 4000);\n      } else {\n        this.count += 1;\n        if (this.count === 1) {\n          this.chomp.play();\n        } else if (this.count === 60) {\n          this.count = 0;\n        }\n        requestAnimationFrame(this.animate);\n      }\n    } else {\n      this.death.play();\n      this.gameOverScreen();\n    }\n  }\n\n}\n\nlet sprite = new Image();\nsprite.src = 'assets/images/pacman_sprite.png';\n\nconst game = () => {\n  document.fonts.ready.then(\n  sprite.onload = () => {\n\n    document.addEventListener(\"keydown\", (e) => startGame(e));\n    let canvas = document.getElementById('maze-canvas');\n    let c = canvas.getContext(\"2d\");\n    let board = new _board__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    c.fillStyle = \"blue\";\n    c.font = \"40px OrbitronBlack\";\n    c.fillText(\"Welcome to\", 160, 150);\n    c.font = \"100px PacFontCrack\";\n    c.fillText(\"CAP•MAN\", 40, 280);\n\n    c.fillStyle = \"yellow\";\n    c.beginPath();\n    c.arc(440, 490, 40, 0.2 * Math.PI, 1.8 * Math.PI);\n    c.lineTo(440, 490);\n    c.closePath();\n    c.fill();\n    //\n    c.drawImage(sprite, 61, 80, 18, 18, 80, 455, 70, 70);   // red\n    // c.drawImage(sprite, 61, 100, 18, 18, 80, 455, 70, 70); // pink\n    c.drawImage(sprite, 61, 120, 18, 18, 180, 455, 70, 70); // blue\n    c.drawImage(sprite, 61, 140, 18, 18, 280, 455, 70, 70); // orange\n\n    drawDot(c, 490, 490);\n    drawDot(c, 540, 490);\n    // drawDot(c, 590, 510);\n    // drawGhost(canvas, c, 30, 79, 'red');\n\n    // c.drawImage(sprite, 1, 20, 18, 18, 400, 460, 100, 100);   // pacman\n\n    c.font = \"20px OrbitronRegular\";\n    c.fillStyle = \"white\";\n    c.fillText(\"PRESS ENTER TO START\", 155, 620);\n  });\n\n};\n\nconst drawDot = (c, x, y) => {\n  c.fillStyle = \"white\";\n  c.beginPath();\n  c.arc( x, y, 7, 0, 2 * Math.PI, false);\n  c.lineTo(x, y);\n  c.closePath();\n  c.fill();\n};\n\n\nconst startGame = (e) => {\n  if (!started) {\n    if (e.key === 'Enter') {\n      const newGame = new Game(sprite);\n      newGame.animate();\n      started = true;\n    }\n  }\n};\n\ngame();\n\n// const drawGhost = (canvas, c, x, y, color) => {\n//   let s = 60,\n//     top = (y / 10) * s,\n//     left = (x / 10) * s,\n//     tl = left + s,\n//     base = top + s - 3,\n//     inc = s / 10,\n//     high = 0 % 10 > 5 ? 3 : -3,\n//     low = 0 % 10 > 5 ? -3 : 3,\n//     f = s / 12,\n//     off = [1, 0];\n//\n//     c.fillStyle = color;\n//     c.beginPath();\n//\n//     c.moveTo(left, base);\n//\n//     c.quadraticCurveTo(left, top, left + (s / 2),  top);\n//     c.quadraticCurveTo(left + s, top, left + s,  base);\n//     c.quadraticCurveTo(tl - (inc * 1), base, tl - (inc * 2) + 8, base);\n//\n//     c.quadraticCurveTo(tl - (inc * 1), base + high - 10, tl - (inc * 2),  base);\n//     c.quadraticCurveTo(tl - (inc * 3), base + low, tl - (inc * 4),  base);\n//     c.quadraticCurveTo(tl - (inc * 5), base + high - 10, tl - (inc * 6),  base);\n//     c.quadraticCurveTo(tl - (inc * 7), base + low, tl - (inc * 8),  base);\n//     c.quadraticCurveTo(tl - (inc * 9), base + high - 10, tl - (inc * 10) + 4, base);\n//\n//     c.closePath();\n//     c.fill();\n//\n//     c.save();\n//     c.translate(canvas.width / 2, canvas.height / 2);\n//     c.scale(1, 1.5);\n//     // c.beginPath();\n//     // c.arc(left + 20, top + 20, s / 7, 0, 300, false);\n//     c.beginPath();\n//     c.arc(500, 100, 10, 0, 2 * Math.PI, false);\n//     // c.arc((left + s) - 20, top + 20, s / 7, 0, 300, false);\n//     c.restore();\n//     c.fillStyle = \"#FFF\";\n//     c.fill();\n//     c.closePath();\n//\n//     c.beginPath();\n//     c.fillStyle = \"#000\";\n//     c.arc(left + 20 + off[0], top + 20 + off[1], s / 15, 0, 300, false);\n//     c.arc((left + s) - 20 + off[0], top + 20 + off[1], s / 15, 0, 300, false);\n//     c.closePath();\n//     c.fill();\n// };\n\n\n//# sourceURL=webpack:///./lib/game.js?");

/***/ }),

/***/ "./lib/ghost.js":
/*!**********************!*\
  !*** ./lib/ghost.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile */ \"./lib/tile.js\");\n\n\nclass Ghost {\n\n  constructor(c, xPos, yPos, color, level, tile, sprite, num) {\n    this.ctx = c;\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.x = (xPos * 20) + 20;\n    this.y = (yPos * 21) + 24.5;\n    this.color = color;\n    this.num = num + 4;\n    this.tile = tile;\n    this.sprite = sprite;\n\n    this.originalX = this.x;\n    this.originalY = this.y;\n\n    this.dir = [0, -1];\n    this.offsetX = -5;\n    this.offsetY = -5;\n\n    this.eatable = false;\n    this.count = 0;\n    this.maxCount = Math.floor(Math.random() * 31) + 50;\n    this.level = level;\n    this.references = {0: 'wall', 1: 'dot', 2: 'powerPellet', 3: 'empty', 4: 'tunnel', 5: 'empty', 6: \"wall\"};\n  }\n\n  draw(firstAnimation) {\n    let xSprite, ySprite;\n    if (this.eatable) {\n      xSprite = 1;\n      ySprite = 160;\n    } else {\n      xSprite = 61;\n      ySprite = this.num * 20;\n    }\n    this.ctx.drawImage(this.sprite, xSprite, ySprite, 18, 18, (this.x - 5), (this.y - 5), 32, 32);\n    if (firstAnimation) {\n      setTimeout(this.moveGhost(), 4000);\n    } else {\n      this.moveGhost();\n    }\n  }\n\n  moveGhost() {\n    if (this.count === this.maxCount || this.dir[0] + this.dir[1] === 0) {\n      this.count = 0;\n      this.maxCount = Math.floor(Math.random() * 31) + 50;\n      this.changeDir();\n    }\n\n    this.count += 1;\n    this.validMove();\n    this.x += (this.dir[0] * (2 + (this.level * 0.5) ));\n    this.y += (this.dir[1] * (2 + (this.level * 0.5) ));\n  }\n\n  getPos() {\n    let x = Math.floor((this.x - 20) / 20);\n    let y = Math.floor((this.y - 21) / 21);\n    return [x, y];\n  }\n\n  getNextPos() {\n    let x = this.x + (this.dir[0]);\n    let y = this.y + (this.dir[1]);\n    let gridX, gridY;\n    if (this.dir[0] + this.dir[1] < 0) {\n      gridX = Math.floor((x - 20) / 20);\n      gridY = Math.floor((y - 24.5) / 21);\n    } else {\n      gridX = Math.ceil((x - 20) / 20);\n      gridY = Math.ceil((y - 24.5) / 21);\n    }\n    return [gridX, gridY];\n  }\n\n  validMove() {\n    let nextPos = this.getNextPos();\n    let nextPosInfo = this.tile.getPosInfo(nextPos);\n    if (this.references[nextPosInfo] === 'wall') {\n      this.dir = [0, 0];\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n    }\n\n    if (this.x > 620) {\n      this.x = -20;\n    } else if (this.x < -20) {\n      this.x = 620;\n    }\n  }\n\n  validChange(pos, dir) {\n    let xPos = pos[0] + dir[0];\n    let yPos = pos[1] + dir[1];\n    let posInfo = this.tile.getPosInfo([xPos, yPos]);\n\n    if (xPos < 1 || xPos > 26) { return false; }\n    if (posInfo === 5 && dir[1] === 1) { return false; }\n    return (this.references[posInfo] !== \"wall\");\n  }\n\n  changeDir() {\n    let dirArray = [\"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\"];\n    let dir = dirArray[Math.floor(Math.random() * dirArray.length)];\n\n    let pos = this.getPos();\n    switch (dir) {\n      case \"ArrowUp\":\n      // debugger\n        if (this.dir[1] != -1 && this.validChange(pos, [0, -1]) ) {\n          if (this.dir[1] !== 1) {\n            this.x = (pos[0] * 20) + 20;\n          }\n          this.dir = [0, -1];\n        }\n        break;\n      case \"ArrowDown\":\n        if (this.dir[1] !== 1 && this.validChange(pos, [0, 1]) ) {\n          if (this.dir[1] !== -1) { this.x = (pos[0] * 20) + 20; }\n          this.dir = [0, 1];\n        }\n        break;\n      case \"ArrowRight\":\n        if (this.dir[0] !== 1 && this.validChange(pos, [1, 0]) ) {\n          if (this.dir[0] !== -1) { this.y = (pos[1] * 21) + 24.5; }\n          this.dir = [1, 0];\n        }\n        break;\n      case \"ArrowLeft\":\n        if (this.dir[0] !== -1 && this.validChange(pos, [-1, 0]) ) {\n          if (this.dir[0] !== 1) { this.y = (pos[1] * 21) + 24.5; }\n          this.dir = [-1, 0];\n        }\n        break;\n    }\n  }\n\n  takeAwayLife() {\n    this.x = this.originalX;\n    this.y = this.originalY;\n    this.dir = [0, -1];\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ghost);\n\n\n//# sourceURL=webpack:///./lib/ghost.js?");

/***/ }),

/***/ "./lib/pacman.js":
/*!***********************!*\
  !*** ./lib/pacman.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tile */ \"./lib/tile.js\");\n\n\nclass Pacman {\n  constructor(c, x, y, tile) {\n    this.x = x;\n    this.y = y;\n    this.xPos = 10;\n    this.yPos = 10.5;\n    this.ctx = c;\n    this.dir = [1, 0];\n    this.references = {0: 'wall', 1: 'dot', 2: 'powerPellet', 3: 'empty', 4: 'tunnel', 5: 'wall', 6: \"wall\"};\n    this.score = 0;\n    this.dots = 242;\n    this.levelWon = false;\n    this.power = 0;\n\n    this.animationSteps = [200, 100, 0, 100];\n    this.animationStep = 0;\n\n    this.mouthDir = [0.3, 1.7];\n\n    // this.pacImage = this.ctx.drawImage('../assets/images/pacman_sprite.png', sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n\n\n    this.tile = tile;\n\n    document.addEventListener(\"keydown\", (e) => this.press(e));\n    this.movePacman = this.movePacman.bind(this);\n    this.validMove = this.validMove.bind(this);\n  }\n\n  press(e) {\n    switch (e.key) {\n      case 'ArrowUp':\n        this.changeDir('ArrowUp');\n        break;\n      case 'ArrowDown':\n        this.changeDir('ArrowDown');\n        break;\n      case 'ArrowRight':\n        this.changeDir('ArrowRight');\n        break;\n      case 'ArrowLeft':\n        this.changeDir('ArrowLeft');\n        break;\n      case 'p':\n        console.log(`pos: x:${this.x}, y:${this.y}`);\n        break;\n      case 's':\n        console.log(`score: ${this.power}`);\n        break;\n      default:\n        console.log(e.key);\n    }\n  }\n\n  movePacman() {\n    this.validMove();\n    this.x += (this.dir[0] * 2);\n    this.y += (this.dir[1] * 2);\n\n    if (this.power > 0) {\n      this.power += 1;\n    } else if (this.power === 220) {\n      this.power = 0;\n    }\n  }\n\n  draw() {\n    const mouth = this.animationSteps[Math.floor(this.animationStep)];\n    var mouthOpen = mouth / 1000;\n    this.ctx.beginPath();\n    this.ctx.arc(this.x + this.xPos, this.y + this.yPos, 13, (this.mouthDir[0] - mouthOpen ) * Math.PI, (this.mouthDir[1] + mouthOpen ) * Math.PI);\n    this.ctx.lineTo(this.x + this.xPos, this.y + this.yPos);\n    this.ctx.closePath();\n    this.ctx.fillStyle = \"#FF0\";\n    this.ctx.fill();\n\n    this.animationStep += 0.15;\n    this.animationStep = this.animationStep % this.animationSteps.length;\n\n    this.ctx.font = '18px OrbitronRegular';\n    this.ctx.fillText(`SCORE:  ${this.score}`, 25, 702);\n    if (this.levelWon) {\n    } else {\n      this.movePacman();\n    }\n  }\n\n  getPos() {\n    let x = Math.floor((this.x - 20) / 20);\n    let y = Math.floor((this.y - 24.5) / 21);\n    return [x, y];\n  }\n\n  validMove() {\n    let pos = this.getPos();\n    let nextPosInfo = this.tile.getNextPosInfo(pos, this.dir);\n    let currentPosInfo = this.tile.getPosInfo(pos);\n    if (this.references[nextPosInfo] === \"wall\") {\n      this.dir = [0, 0];\n    } else if (this.references[currentPosInfo] === \"dot\") {\n      this.tile.changeTile(pos, 3);\n\n      this.score += 10;\n      this.dots -= 1;\n      if (this.dots === 0) {this.levelWon = true;}\n    } else if (this.references[currentPosInfo] === \"powerPellet\") {\n      this.tile.changeTile(pos, 3);\n      this.power = 1;\n      this.score += 50;\n    }\n    if (this.x === 620) {\n      this.x = -20;\n    } else if (this.x === -20) {\n      this.x = 620;\n    }\n  }\n\n  goToStartingPos() {\n    this.x = 300;\n    this.y = 507.5;\n    this.dir = [1, 0];\n    this.xPos = 10;\n    this.yPos = 10.5;\n    this.animationStep = 0;\n    this.mouthDir = [0.3, 1.7];\n  }\n\n  nextPos(pos) {\n    let col = pos[0] + this.dir[0];\n    let row = pos[1] + this.dir[1];\n    this.x = (col * 20) + 20;\n    this.y = (row * 21) + 24.5;\n  }\n\n  changeDir(dir) {\n    let pos = this.getPos();\n    if (dir === \"ArrowUp\" && this.dir[1] !== -1 && (pos[0] > 0 && pos[0] < 27) ) {\n      let nextDirPos = this.tile.getNextPosInfo(pos, [0,-1]);\n      if (this.references[nextDirPos] !== \"wall\") {\n        this.dir = [0, -1];\n        this.nextPos(pos);\n        this.xPos = 10;\n        this.yPos = -10.5;\n        this.y += 42;\n        this.mouthDir = [1.8, 1.2];\n      }\n    } else if (dir === \"ArrowDown\" && this.dir[1] !== 1 && (pos[0] > 0 && pos[0] < 27)) {\n      let nextDirPos = this.tile.getNextPosInfo(pos, [0, 1]);\n      if (this.references[nextDirPos] !== \"wall\") {\n        this.dir = [0, 1];\n        this.nextPos(pos);\n        this.xPos = 10;\n        this.yPos = 10.5;\n        this.y -= 21;\n        this.mouthDir = [0.8, 2.2];\n      }\n    } else if (dir === \"ArrowRight\" && this.dir[0] !== 1) {\n      let nextDirPos = this.tile.getNextPosInfo(pos, [1, 0]);\n      if (this.references[nextDirPos] !== \"wall\") {\n        this.dir = [1, 0];\n        this.nextPos(pos);\n        this.xPos = 10;\n        this.yPos = 10.5;\n        this.x -= 20;\n        this.mouthDir = [0.3, 1.7];\n      }\n    } else if (dir === \"ArrowLeft\" && this.dir[0] !== -1) {\n      let nextDirPos = this.tile.getNextPosInfo(pos, [-1,0]);\n      if (this.references[nextDirPos] !== \"wall\") {\n        this.dir = [-1,0];\n        this.nextPos(pos);\n        this.xPos = -10;\n        this.yPos = 10.5;\n        this.x += 40;\n        this.mouthDir = [1.3, 0.7];\n      }\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Pacman);\n\n\n//# sourceURL=webpack:///./lib/pacman.js?");

/***/ }),

/***/ "./lib/sound.js":
/*!**********************!*\
  !*** ./lib/sound.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Sound {\n constructor(src) {\n   this.sound = document.createElement(\"audio\");\n   this.sound.src = src;\n   this.sound.setAttribute(\"preload\", \"auto\");\n   this.sound.setAttribute(\"controls\", \"none\");\n   this.sound.style.display = \"none\";\n   document.body.appendChild(this.sound);\n   this.play = function() {\n     this.sound.play();\n   };\n   this.stop = function() {\n     this.sound.pause();\n     this.currentTime = 0;\n   };\n }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sound);\n\n// beginning = new Sound(\"sounds/pacman_beginning.wav\");\n// chomp = new Sound(\"sounds/pacman_chomp.wav\");\n// death = new Sound(\"sounds/pacman_death.wav\");\n// eatGhost = new Sound(\"sounds/pacman_eat_ghost.wav\");\n\n\n//# sourceURL=webpack:///./lib/sound.js?");

/***/ }),

/***/ "./lib/tile.js":
/*!*********************!*\
  !*** ./lib/tile.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Tile {\n\n  constructor() {\n    this.grid = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // 0\n      [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], // 1\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], // 2\n      [0, 2, 0, 3, 3, 0, 1, 0, 3, 3, 3, 0, 1, 0, 0, 1, 0, 3, 3, 3, 0, 1, 0, 3, 3, 0, 2, 0], // 3\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], // 4\n      [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], // 5\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], // 6\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], // 7\n      [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], // 8\n      [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], // 9\n      [6, 6, 6, 6, 6, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 6, 6, 6, 6, 6], // 10\n      [6, 6, 6, 6, 6, 0, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 6, 6, 6, 6, 6], // 11\n      [6, 6, 6, 6, 6, 0, 1, 0, 0, 3, 0, 0, 0, 5, 5, 0, 0, 0, 3, 0, 0, 1, 0, 6, 6, 6, 6, 6], // 12\n      [0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0], // 13\n      [4, 3, 3, 3, 3, 3, 1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 1, 3, 3, 3, 3, 3, 4], // 14\n      [0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0], // 15\n      [6, 6, 6, 6, 6, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 6, 6, 6, 6, 6], // 16\n      [6, 6, 6, 6, 6, 0, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 6, 6, 6, 6, 6], // 17\n      [6, 6, 6, 6, 6, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 6, 6, 6, 6, 6], // 18\n      [0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0], // 19\n      [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], // 20\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], // 21\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], // 22\n      [0, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 0], // 23\n      [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], // 24\n      [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], // 25\n      [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], // 26\n      [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], // 27\n      [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], // 28\n      [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], // 29\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // 30\n    ];\n  }\n\n  calculateEatingPos(pos) {\n    let x = Math.floor((pos[0] - 16) / (560 / 28));\n    let y = Math.floor((pos[1] - 16) / (660 / 31));\n    return [x, y];\n  }\n\n  calculateMovingPos(pos) {\n    let x = Math.ceil((pos[0] - 16) / (560 / 28));\n    let y = Math.ceil((pos[1] - 16) / (660 / 31));\n    return [x, y];\n  }\n\n  getPosInfo(pos) {\n    return this.grid[pos[1]][pos[0]];\n  }\n\n  getNextPosInfo(pos, dir) {\n    let col = pos[0] + dir[0];\n    let row = pos[1] + dir[1];\n    return this.grid[row][col];\n  }\n\n  // getNextClosePosInfo(pos, dir) {\n  //   let col = pos[0] + (dir[0] * 3);\n  //   let row = pos[1] + (dir[1] * 3);\n  //   let gridPos = this.getPos([col, row]);\n  //   return this.getPosInfo(gridPos);\n  // }\n  //\n  // getPos(pos) {\n  //   let x = Math.floor((pos[0] - 20) / 20);\n  //   let y = Math.floor((pos[1] - 24.5) / 21);\n  //   return [x, y];\n  // }\n//\n  changeTile(pos, newVal) {\n    this.grid[pos[1]][pos[0]] = newVal;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tile);\n\n\n\n// [0,-1] -> up\n// [0, 1] -> down\n// [1, 0] -> right\n// [-1,0] -> left\n\n\n\n\n\n\n//\n\n\n//# sourceURL=webpack:///./lib/tile.js?");

/***/ })

/******/ });